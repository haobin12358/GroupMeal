<style scoped lang="less">
  @import "../styles/base";
  .container {
    .register-from {
      .logo-part {
        text-align: center;
        padding-top:15%;
        .logo-png {
          width: 142rpx;
          height: 142rpx;
        }
        .logo-text {
          font-size: 36rpx;
          margin-bottom: 13%;
        }
      }
      .from-text {
        width: 19%;
        float: left;
        font-size: 28rpx;
        line-height: 1.4rem;
        margin-left: 17%;
      }
      .from-input {
        align-items: center;
        z-index: 0;
        width: 60%;
        float: left;
        font-size: 28rpx;
        margin-bottom: 2%;
      }
      .from-pw {
        width: 250rpx;
        float: left;
        font-size: 28rpx;
        margin-bottom: 2%;
      }
      .line {
        float:left;
        height: 2rpx;
        width: 70%;
        margin-bottom: 5%;
        margin-left: 15%;
        background-color: #c5c5c5;
      }
      .m-btn {
        color: #ffffff;
        font-size: 28rpx;
        display: inline-block;
        background-color: @redPink;
        margin-left: -6%;
      }
      .m-btn-disab {
        margin-top: 13%;
        margin-left: -20%;
      }
      button {
        margin-top: -1%;
        padding-right: 15rpx;
        padding-left: 15rpx;
        height: 56rpx;
        line-height: 56rpx;
      }
      .form-button {
        font-size: 32rpx;
        color: #ffffff;
        width: 200rpx;
        height: 80rpx;
        margin-left: 37%;
        line-height: 80rpx;
        border-radius: 8rpx;
        background-color: @redPink;
      }
    }
  }
</style>

<template>
  <view class="container">
    <view class="register-from">
      <view class="logo-part">
        <image src="../images/logo.png" class="logo-png"></image>
        <view class="logo-text">智慧食堂</view>
      </view>
      <form bindsubmit="formSubmit" bindreset="formReset">
        <text class="from-text">手 机 号：</text>
        <input placeholder-style="color:#fb88b4" class="from-input" name="phone" type="number" placeholder="请输入手机号" maxlength="11" bindinput="phoneInput"/>
        <view class="line"></view>
        <text class="from-text">验 证 码：</text>
        <input placeholder-style="color:#fb88b4" class="from-pw" type="number" name="code" placeholder="请输入验证码" maxlength="6"/>
        <button wx:if="{{disable}}" class="m-btn m-btn-disab" >{{time}}秒</button>
        <button wx:else="{{disable}}" class="m-btn" @tap="sendCode">获取验证码</button>
        <view class="line"></view>
        <text class="from-text">新 密 码：</text>
        <input placeholder-style="color:#fb88b4" class="from-input" password name="pass" placeholder="请输入新密码" maxlength="16"/>
        <view class="line"></view>
        <text class="from-text">再次输入：</text>
        <input placeholder-style="color:#fb88b4" class="from-input" password name="passNew" placeholder="请再次输入新密码" maxlength="16"/>
        <view class="line" style="margin-bottom: 20%"></view>
        <button class="form-button" formType="submit">确认修改</button>
      </form>
    </view>
  </view>
</template>

<script >
  import wepy from 'wepy';
  import tip from '../utils/tip';
  import api from '../api/api';
  export default class Register extends wepy.page{
    config = {
      navigationBarTitleText: '忘记密码'
    }
    data = {
      disable: false,
      phone: '',
      time: 60,
    }
    async forgetPwd (pwd, newPwd, tel, vali) {
      let that = this;
      const res = await api.forgetPwd({
        query: {
          USpasswordnew: pwd,
          USpasswordnewrepeat: newPwd,
          UStelphone: tel,
          UScode: vali
        },
        method: 'POST'
      })
      if(res.data.status == '200'){
        tip.success("更新密码成功");
        wepy.navigateBack();
        that.$apply();
      }else tip.error(res.data.message)
    }
    async sendVerifyCode() {
      let that = this;
      const res = await api.getValidate({
        query: {
          UStelphone: this.phone
        },
        method: 'POST'
      });
      // console.log(res)
      if(res.data.status == '200'){
        tip.success('发送成功');
        that.disableSend();
      } else {
        tip.error(res.data.message)
      }
    }
    disableSend() {
      let that = this;
      that.disable = true;
      let interval = setInterval(() => {
        if ((that.time--) <= 0) {
          that.time = 60;
          that.disable = false;
          clearInterval(interval);
          that.$apply();
        }
        that.$apply();
      }, 1000);
    }
    async getText(){
      let res = await api.getText();
      console.log(res)
      this.text = res.data
    }
    onLoad(){

    }
    methods = {
      phoneInput(e) {
        this.phone = e.detail.value;
        console.log(this.phone)
      },
      sendCode(e) {
        if (this.phone == "") {
          tip.alert("请输入手机号码");
          return false;
        }
        this.sendVerifyCode();
      },
      formSubmit (e) {
        console.log(e)
        let that = this;
        let phone = e.detail.value.phone;
        let pass = e.detail.value.pass;
        let passnew = e.detail.value.passNew;
        let code = e.detail.value.code;
        if(phone == ''){ tip.alert("请输入手机号"); return false;}
        if(pass == ''){ tip.alert("请输入密码"); return false;}
        console.log(passnew,pass)
        if(pass != passnew){ tip.alert("密码不一致"); return false;}
        if(code == ''){ tip.alert("请输入验证码"); return false;}
        that.forgetPwd( pass,passnew, phone, code)
        console.log('form发生了submit事件，携带数据为：', e.detail.value)
      }
    }
  }
</script>
