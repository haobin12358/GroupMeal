<style scoped lang="less">
  @import "../styles/base";

  .commodity-swiper{
    height: 422rpx;

    .header{
      height: 86rpx;
      width: 694rpx;
      border-top: 2rpx solid #e9e9e9;
      padding-top: 18rpx;
      padding-left: 12rpx;
      margin: 0 auto;

      display: flex;
      justify-content: space-between;

      .showMore{
        color: @redPink;

        .fz24();
      }
    }

    .swiper{
      white-space: nowrap;
      width: 100%;
      height: 300rpx;

      .swiper-item{
        height: 200rpx;
        width: 280rpx;
        display: inline-block;
        position: relative;
        margin-right: 50rpx;
        text-align: center;

        .fz24();

         image{
           width: 280rpx;
           height: 200rpx;
           box-shadow: 0 2px 4px 0 rgba(107, 107, 107, 0.5);
           opacity: .8;
           transition: height .5s;
         }

        .meal-img-active{
          width: 310rpx;
          height: 230rpx;
          opacity: 1;
        }

         .name{
           color: @nameColor;
         }

          .price{
            color: @redPink;
          }
      }

      .swiper-item-active{
        height: 350rpx;
      }
    }
  }
</style>

<template>
  <view class="commodity-swiper">
    <view class="header">
      <view>营养套餐</view>
      <view class="showMore">查看更多</view>
    </view>
    <swiper class="swiper" circular="true" previous-margin="187rpx" next-margin="187rpx" current="{{current}}" bindchange="swiperChange">
      <swiper-item  wx:for="{{list}}" wx:key="MEid" class="swiper-item " @tap="tapItem({{item}})">
        <image class="{{index==current? 'meal-img-active':''}}" src="{{item.MEimage}}"></image>
        <view class="name">{{item.MEname}}</view>
        <view class="price">￥{{item.MEprice}}</view>
      </swiper-item>
    </swiper>
  </view>

</template>
<script>
    import wepy from 'wepy'


    export default class CommoditySwiper extends wepy.component {
      props = {
        list: {
          //  Object String Number Boolean Array
          type: Array
        }
      }

      data = {
        current: 0

      }
      computed = {}

      methods = {
        scrollHandler(e) {
          let scrollLeft = e.scrollLeft
          let scrollTop = e.scrollTop
          let scrollHeight = e.scrollHeight
          let scrollWidth = e.scrollWidth
          let deltaX = e.deltaX
          let deltaY = e.deltaY
          // console.log(e);
        },
        tapItem(item){
          console.log('组件','tapItem')
          this.$emit('tapItem', item)
        },
        swiperChange(e){
          console.log(e.detail.current);
          this.current = e.detail.current
        }

      }

      events = {}

      onLoad() {

      }
    }
</script>

